autoverse.chat.configurator.error.items_not_found=§c未能找到所有標記物品§r
autoverse.chat.configurator.error.no_stored_properties_selected=§c在選擇的序列中沒有儲存的屬性§r
autoverse.chat.configurator.error.wrong_state=§c失敗：方塊放置器沒有在正確的設置階段（開始設置屬性1）§r
autoverse.chat.configurator.properties_stored=§a成功儲存了屬性§r
autoverse.chat.placement_properties.applied_from_held_item=已保存手持物品的應用屬性
autoverse.chat.wand.sequence_applied_failed=§c失敗：只有%d個物品中的%d個成功設置§r
autoverse.chat.wand.sequence_applied_success=§a成功設置了有%d個物品的序列§r
autoverse.chat.wand.sequence_stored=序列已經儲存
autoverse.commands.loadconfig.success=Autoverse: 配置加載成功
autoverse.container.barrel=儲物桶
autoverse.container.block_detector=方塊檢測器
autoverse.container.block_reader_nbt=方塊狀態讀取器
autoverse.container.breaker=方塊破壞器
autoverse.container.buffer_fifo=FIFO（先進先出）緩存器
autoverse.container.buffer_fifo_auto=自動推送式FIFO緩存器
autoverse.container.buffer_fifo_pulsed=脈沖式FIFO緩存器
autoverse.container.crafter=可編程自動合成器
autoverse.container.filter=過濾器
autoverse.container.filter_sequential=序列過濾器
autoverse.container.filter_sequential_strict=嚴格序列過濾器
autoverse.container.muxer_priority=多路調制器
autoverse.container.muxer_programmable=可編程多路調制器
autoverse.container.muxer_redstone=紅石控制多路調制器
autoverse.container.pipe=管道
autoverse.container.placer=方塊放置器
autoverse.container.placer_programmable=可編程方塊放置器
autoverse.container.redstone_emitter_advanced=可編程紅石信號發生器（高級）
autoverse.container.redstone_emitter_basic=可編程紅石信號發生器（基礎）
autoverse.container.sequence_detector=序列檢測器
autoverse.container.sequencer_basic=定序器
autoverse.container.sequencer_programmable=可編程定序器
autoverse.container.splitter_length=序列長度分離器
autoverse.container.splitter_redstone=紅石控制虛序列分離器
autoverse.container.splitter_switchable=可切換序列分離器
autoverse.container.trash_bin=垃圾桶
autoverse.container.trash_buffer=垃圾緩存器
autoverse.gui.infoarea.barrel=-Shift/Alt/Ctrl + 點擊以增大步進值|lf- 右鍵減少步進值|lf- 滾輪有一樣的效果|lf- Shift + 鼠標中鍵（在創造模式下）：|lf- 補滿堆疊（需要拿著多於一個物品）|lf- 以10x的增量改變堆疊大小（拿著一個物品—）
autoverse.gui.infoarea.block_breaker=- 首先試圖將物品輸出到後方方塊|lf 如果失敗，改為試圖輸出到後方的後方的方塊|lf 這樣可以在本設備的後方放置一個可移動框架,並且同時可以輸出本方塊內的物品
autoverse.gui.infoarea.block_detector=- 試圖檢測自己前方的方塊|lf- 成功檢測到預設好的方塊時輸出一個相同的物品|lf- 如果設置的方塊未被檢測到，則輸出一個在“其他物品”欄中的物品|lf- 輸出之前需要先在緩存中存儲了對應的物品|lf- 每次檢測輸出一個物品|lf- 設置為二進制數值|lf- 1比特物品在設置中代表二進制的“1”|lf- 任何其他物品代表二進制中的“0”|lf- 設置數值從最低有效位開始（二進制數字中的第0位）|lf- 可以設置的最大數值是4比特（距離檢測器前方的方塊0-15個方塊）|lf- 角度也同樣是4比特，15=45度（金字塔形）|lf- 設置的角度是最大角度|lf- 在每次檢測的時候，角度是隨機選擇的（在設置角度內）|lf- 延遲是在每次檢測中間間隔的秒數（8比特，最大=255秒）|lf- 如果延遲=0則在收到紅石信號時進行檢測
autoverse.gui.infoarea.block_placer_nbt=- 收到紅石信號開始在自己前方放置方塊|lf- 從第一個槽位開始，放在第一個槽位的方塊會被放置在正前方，|lf  第二個槽位放置在正前方+1的位置，以此類推|lf- 移除紅石信號則會將目前工作位置（+槽位）重置為0|lf- 主要用於放置被方塊狀態讀取器設置好的方塊
autoverse.gui.infoarea.block_placer_programmable=- 1比特標記在屬性序列中代表一個高位|lf- 屬性序列是一個8比特整數|lf- 對於朝向屬性，0-5分別代表了下，上，北，男，西，東|lf- 對於有朝向屬性的autoverse方塊，其主朝向是屬性1，第二輸出方向是屬性2（如存在）|lf  其他數字屬性在此之後|lf- 觸發序列是激活方塊放置的序列，完成觸發後下一個進入的方塊將被本設備放置|lf- 出發序列也可以是空的，代表著每一個進入本設備的方塊都會被（試圖）放置|lf- 偏移量為離本設備前方方塊的距離差（0-15）|lf 0代表直接放在本方塊前方，2代表在本方塊前方隔兩個方塊。
autoverse.gui.infoarea.buffer_fifo=- 將物品儲存在一個FIFO（先進先出）型容器中|lf- 這代表，物品將以進入時相同的順序離開本方塊|lf- 在按鈕上Shift 和/或 Ctrl + 鼠標左/右鍵/滾輪可以改變容器大小|lf- Alt + 鼠標中鍵：設定輸入位置|lf- Shift + 鼠標中鍵設定輸出位置|lf- 在空槽位上Ctrl +鼠標中鍵：將物品後移一個槽位（移除空槽）|lf- 在一個有物品的槽位上Ctrl + 鼠標中鍵：將本槽位中的物品後移一格（加入一個空槽）
autoverse.gui.infoarea.crafter=- 空標記在編程中代表配方中的空位|lf- 配方編輯方式為從左到右，從上到下
autoverse.gui.infoarea.muxer_programmable=- 激活的輸入口在第n個物品進入之後切換|lf- 兩個設定序列分別定義了兩個輸入口的切換數量|lf- 他們的數值為16比特整數，從最低有效位開始設定|lf- 有標記（可以設置）的輸入面為輸入2，其他任意面為輸入1
autoverse.gui.infoarea.redstone_emitter_basic=- 激活記號用於在編程時設定產生紅石信號的面|lf- 面的設定順序為下-上-北-南-西-東|lf- 當檢測到啟動序列時，所有啟用的面都會產生紅石信號|lf- 你可以定義相同的啟動/關閉序列，這樣的序列就可以作為一個開關
autoverse.gui.infoarea.sequence_detector=- 在序列匹配時輸出一個可調長度的紅石脈沖
autoverse.gui.infoarea.sequencer_basic=- 鼠標左/右鍵點擊或者在按鈕上滾輪可以修改數值|lf- 按住shift可以加大步伐
autoverse.gui.infoarea.sequencer_programmable=- 序列物品必須從正面以外的面被取出|lf- 方塊本身會從正面推出正常輸出物品
autoverse.gui.infoarea.splitter_length=- 激活的輸出口每經過n個物品切換一次|lf- 兩個設定序列分別定義了兩個輸出口的切換數量|lf- 他們的數值為16比特整數，從最低有效位開始設定|lf- 有標記（可以設置）的輸出面為輸出2
autoverse.gui.infoarea.splitter_switchable=- 你可以定義相同的啟動/關閉序列，這樣的序列就可以作為一個開關
autoverse.gui.label.1_bit_marker=1比特
autoverse.gui.label.barrel.change_tier=改變儲物桶等級
autoverse.gui.label.block_detector.delay=延遲（秒）
autoverse.gui.label.block_detector.detection_items=檢測物品（過濾器/緩存器）
autoverse.gui.label.block_detector.distance_and_angle=距離/角度
autoverse.gui.label.block_detector.other_items=其他緩存器
autoverse.gui.label.block_detector.out_detection=輸出（檢測）
autoverse.gui.label.block_detector.use_indicators=使用範圍指示器
autoverse.gui.label.block_placer_programmable.end_marker=結束標志
autoverse.gui.label.block_placer_programmable.offset=偏移量
autoverse.gui.label.block_placer_programmable.property=屬性 %d
autoverse.gui.label.block_placer_programmable.trigger=觸發器
autoverse.gui.label.block_reader.block_count=長度（方塊數量）
autoverse.gui.label.block_reader.take_blocks=從世界中獲取方塊狀態
autoverse.gui.label.block_reader_nbt.length_num=長度：%d
autoverse.gui.label.buffer.push_delay=推送延遲
autoverse.gui.label.crafting_grid=合成欄
autoverse.gui.label.crafting_pattern=模板
autoverse.gui.label.current_name=目前名字
autoverse.gui.label.delay.num=延遲：%d tick
autoverse.gui.label.delay=傳輸延遲/速度（tick）
autoverse.gui.label.empty_marker=空標記
autoverse.gui.label.end=結束
autoverse.gui.label.end_marker=結束標志
autoverse.gui.label.filter_items=過濾物品
autoverse.gui.label.filtered_seq_buffer=過濾序列緩存
autoverse.gui.label.in=輸入
autoverse.gui.label.input.num=輸入%d
autoverse.gui.label.input=輸入
autoverse.gui.label.inventory_size=容器大小
autoverse.gui.label.matched_sequence=符合
autoverse.gui.label.max_stack_num=最大堆疊：%d
autoverse.gui.label.max_stack_size=最大堆疊數
autoverse.gui.label.muxer_programmable.count_num=序列長度%d
autoverse.gui.label.muxer_programmable.input2=輸入2
autoverse.gui.label.muxer_programmable.toggle=切換激活的輸入口|lf(並且重置內部計數器)
autoverse.gui.label.out=輸出
autoverse.gui.label.out_filtered=輸出（過濾的）
autoverse.gui.label.out_normal=輸出（正常）
autoverse.gui.label.output_buffer=輸出緩存
autoverse.gui.label.pulse_length=脈沖長度
autoverse.gui.label.redstone_emitter.enabled_marker=開啟標記
autoverse.gui.label.redstone_emitter.sequence_off=關閉序列
autoverse.gui.label.redstone_emitter.sequence_on=開啟序列
autoverse.gui.label.redstone_emitter.side_config=方向設置
autoverse.gui.label.redstone_emitter_advanced.down=下方面開關
autoverse.gui.label.redstone_emitter_advanced.east=東方面開關
autoverse.gui.label.redstone_emitter_advanced.north=北方面開關
autoverse.gui.label.redstone_emitter_advanced.south=南方面開關
autoverse.gui.label.redstone_emitter_advanced.up=上方面開關
autoverse.gui.label.redstone_emitter_advanced.west=西方面開關
autoverse.gui.label.reset_sequence=重置序列
autoverse.gui.label.rst=重置
autoverse.gui.label.sequence_detector.sequence=檢測序列
autoverse.gui.label.sequencer_programmable.sequence=序列
autoverse.gui.label.setname=設置名字
autoverse.gui.label.splitter.output=輸出%d
autoverse.gui.label.splitter.switching_sequence=切換序列
autoverse.gui.label.splitter.switching_sequence_num=切換序列%d
autoverse.gui.label.splitter_length.toggle=切換激活的輸出口|lf(並且重置內部計數器)
autoverse.gui.label.splitter_switchable.toggle=切換激活的輸出口
autoverse.gui.label.tier_num=等級：%d
autoverse.gui.label.toggle_creative=切換創造模式
autoverse.gui.label.trash.count=消滅的物品數：%d
autoverse.gui.label.trash.feedback=反饋：%s
autoverse.key.togglemode=切換/動作
autoverse.placement_properties.barrel.tier=儲物桶等級
autoverse.placement_properties.buffer.delay=推送延遲
autoverse.placement_properties.buffer.size=緩存大小
autoverse.placement_properties.machine.slim_model=小號模型
autoverse.placement_properties.pipe.delay=延遲
autoverse.placement_properties.pipe.max_stack=最大堆疊數
autoverse.placement_properties.sequence_detector.on_time=按時 (RS ticks)
autoverse.placement_properties.sequencer.length=長度
autoverse.placement_properties.title=放置屬性
autoverse.tooltip.config_props_title=|lf§f*** 方塊放置器可設置屬性 ***§r
autoverse.tooltip.item.andmorestacksnotlisted=還有 %s%d%s 組沒有列出來
autoverse.tooltip.item.holdshift=按住§e§oShift§7以查看更多信息
autoverse.tooltip.item.holdshiftfordescription=按住 §e§oShift§7 可看到完整描述
autoverse.tooltip.item.stackcount=目前總共存儲了 %d 組 / %s 個物品
autoverse.tooltip.item.stacks=組
autoverse.tooltip.placementproperties.tooltips=|lf§f***放置屬性***§r|lf- (Shift +)切換鍵可以改變屬性選擇|lf- Ctrl和/或 Alt + scroll可以改變數值
category.autoverse=Autoverse
item.autoverse.configurator.name=方塊放置器屬性設置器
item.autoverse.configurator.tooltips=- 可以讀取並儲存任意方塊的可設置屬性（如朝向等等）|lf- 用來設置可編程方塊放置器|lf- Alt + 鼠標滾輪：改變選定的槽位/序列|lf- 切換鍵：給目前選擇的屬性序列命名|lf- Shift + 鼠標中鍵：儲存指向的方塊的數據|lf- Shift + 右鍵點擊一個可編程方塊放置器以應用屬性|lf- 註意：方塊放置器必須設置到偏移量之後|lf- 當本物品應用屬性序列時，在玩家背包中能找到的第一個可堆疊的物品將被用於低位代表物品|lf （不能是結束標記和高位標記）
item.autoverse.wand.name=序列設置之仗
item.autoverse.wand.tooltips=- 能儲存物品序列並將其應用到設備上|lf- Alt + 鼠標滾輪：改變選擇的序列|lf- 切換鍵：給目前選擇的序列命名|lf- Shift + 鼠標中鍵：從指向的方塊中保存序列|lf 可以是autoverse設備，也可以是任何其他容器|lf- Shift + 右鍵點擊任何設備或容器以應用序列|lf- 在未指向TileEntity的情況下Shift + 鼠標中鍵刪除目前選擇的序列
language.code=zh_cn
language.name=簡體中文
language.region=CN
tile.autoverse.barrel.config_props=- 屬性1：儲物桶等級
tile.autoverse.barrel.name=儲物桶
tile.autoverse.barrel.tooltips=- 一個簡單的單槽位存儲設備|lf- 其等級（最大堆疊數）是可以設定的|lf- 收到紅石信號後鎖定
tile.autoverse.barrel_pulsed.config_props=- 屬性1：儲物桶等級
tile.autoverse.barrel_pulsed.name=脈沖式儲物桶
tile.autoverse.barrel_pulsed.tooltips=- 一個簡單的單槽位存儲設備|lf- 其等級（最大堆疊數）是可以設定的|lf- 脈沖版不可以用紅石信號鎖定|lf- 相反，它收到信號後會試圖向下方輸出一個物品
tile.autoverse.block_reader_nbt.config_props=- 屬性1：朝向|lf- 屬性2：最大長度
tile.autoverse.block_reader_nbt.name=方塊狀態讀取器 (NBT)
tile.autoverse.block_reader_nbt.tooltips=- 可以讀取世界中方塊的狀態並將其編碼成物品的nbt數據|lf- 用於和不能編程的方塊放置器一起使用
tile.autoverse.breaker_greedy.config_props=- 屬性1：朝向|lf- 屬性2：延遲（tick）
tile.autoverse.breaker_greedy.name=方塊破壞器（貪婪）
tile.autoverse.breaker_greedy.tooltips=- 破壞除了在後邊的所有方塊|lf- 試圖向自己後方以及後後方的方塊輸出物品|lf （這樣可以在本設備的後方放置一個可移動框架,並且同時可以輸出本方塊內的物品）
tile.autoverse.breaker_normal.config_props=- 屬性1：朝向|lf- 屬性2：延遲（tick）
tile.autoverse.breaker_normal.name=方塊破壞器
tile.autoverse.breaker_normal.tooltips=- 破壞自身前方方塊|lf- 試圖向自己後方以及後後方的方塊輸出物品|lf （這樣可以在本設備的後方放置一個可移動框架,並且同時可以輸出本方塊內的物品）
tile.autoverse.buffer_fifo.config_props=- 屬性1：朝向|lf- 屬性2：FIFO緩存器物品欄大小|lf- 屬性3：推送延遲
tile.autoverse.buffer_fifo.name=FIFO（先進先出）緩存器
tile.autoverse.buffer_fifo.tooltips=- 將物品儲存在一個FIFO（先進先出）型物品欄中|lf- 這代表，物品將以進入時相同的順序離開本方塊|lf- 在按鈕上Shift 和/或 Ctrl + 鼠標左/右鍵/滾輪可以改變物品欄大小|lf- Alt + 鼠標中鍵：設定輸入位置|lf- Shift + 鼠標中鍵設定輸出位置|lf- 在空槽位上Ctrl +鼠標中鍵：將物品後移一個槽位（移除空槽）|lf- 在一個有物品的槽位上Ctrl + 鼠標中鍵：將本槽位中的物品後移一格（加入一個空槽）
tile.autoverse.buffer_fifo_auto.config_props=- 屬性1：朝向|lf- 屬性2：FIFO緩存器物品欄大小|lf- 屬性3：推送延遲
tile.autoverse.buffer_fifo_auto.name=自動推送式FIFO緩存器
tile.autoverse.buffer_fifo_auto.tooltips=- 基礎信息參見普通FIFO緩存器|lf- 會自動輸出物品|lf- 可以用紅石信號鎖定（防止自動輸出）
tile.autoverse.buffer_fifo_pulsed.config_props=- 屬性1：朝向|lf- 屬性2：FIFO緩存器物品欄大小|lf- 屬性3：推送延遲
tile.autoverse.buffer_fifo_pulsed.name=脈沖式FIFO緩存器
tile.autoverse.buffer_fifo_pulsed.tooltips=- 基礎信息參見普通FIFO緩存器|lf- 只有在收到紅石脈沖時才會推進輸出槽
tile.autoverse.circuit_latch_rs.config_props=- 屬性1：朝向|lf- 屬性2：設置朝向|lf- 屬性3：重置朝向
tile.autoverse.circuit_latch_rs.name=RS鎖存器
tile.autoverse.circuit_latch_rs.tooltips=- 右鍵點擊設置輸出面|lf- Shift + 右鍵設定設置面（綠色）|lf- Shift + 左鍵設定重置面
tile.autoverse.circuit_latch_t.config_props=- 屬性1：朝向
tile.autoverse.circuit_latch_t.name=T鎖存器
tile.autoverse.circuit_latch_t.tooltips=- 右鍵點擊設置輸出面
tile.autoverse.crafter.config_props=- 屬性1：朝向
tile.autoverse.crafter.name=可編程自動合成器
tile.autoverse.crafter.tooltips=- 自動合成器，需要以物品序列編程
tile.autoverse.detector.config_props=- 屬性1：朝向|lf- 屬性2：檢測物品輸出方向
tile.autoverse.detector.name=可編程方塊檢測器
tile.autoverse.detector.tooltips=- 試圖檢測自己前方的方塊|lf- 成功檢測到預設好的方塊時輸出一個相同的物品|lf- 如果設置的方塊未被檢測到，則輸出一個在“其他物品”欄中的物品|lf- 輸出之前需要先在緩存中存儲了對應的物品|lf- 每次檢測輸出一個物品|lf- 設置為二進制數值|lf- 1比特物品在設置中代表二進制的“1”|lf- 任何其他物品代表二進制中的“0”|lf- 設置數值從最低有效位開始（二進制數字中的第0位）|lf- 可以設置的最大數值是4比特（距離檢測器前方的方塊0-15個方塊）|lf- 角度也同樣是4比特，15=45度（金字塔形）|lf- 設置的角度是最大角度|lf- 在每次檢查的時候，角度是隨機選擇的（在設置角度內）|lf- 延遲是在每次檢測中間間隔的秒數（8比特，最大=255秒）|lf- 如果延遲=0則在收到紅石信號時檢測
tile.autoverse.filter_basic.config_props=- 屬性1：朝向|lf- 屬性2：過濾物品輸出方向|lf- 屬性3：延遲（tick）
tile.autoverse.filter_basic.name=可編程過濾器（基礎）
tile.autoverse.filter_basic.tooltips=- 一個基礎的可編程過濾器|lf- 符合過濾器設定的物品從過濾輸出口輸出|lf- 空手Shift + 右鍵可設定過濾輸出口
tile.autoverse.filter_sequential.config_props=- 屬性1：朝向|lf- 屬性2：過濾物品輸出方向|lf- 屬性3：延遲（tick）
tile.autoverse.filter_sequential.name=可編程過濾器（序列）
tile.autoverse.filter_sequential.tooltips=- 過濾的物品只會以事先設定的順序輸出|lf- 空手Shift + 右鍵可設定過濾輸出口
tile.autoverse.filter_sequential_strict.config_props=- 屬性1：朝向|lf- 屬性2：過濾物品輸出方向|lf- 屬性3：延遲（tick）
tile.autoverse.filter_sequential_strict.name=可編程過濾器（嚴格序列）
tile.autoverse.filter_sequential_strict.tooltips=- 只有在整個序列都符合的時候物品才會被輸出到過濾輸出口|lf- 可以當作一個序列提取器|lf- 空手Shift + 右鍵可設定過濾輸出口
tile.autoverse.inventory_reader_items.config_props=- 屬性1：朝向
tile.autoverse.inventory_reader_items.name=容器檢測器（物品）
tile.autoverse.inventory_reader_items.tooltips=- 像原版比較器一樣，根據目標容器的裝滿程度輸出紅石信號，但是：|lf  - 可以以任意方法放置|lf  - 只讀取容器
tile.autoverse.inventory_reader_slots.config_props=- 屬性1：朝向
tile.autoverse.inventory_reader_slots.name=容器檢測器（槽位）
tile.autoverse.inventory_reader_slots.tooltips=- 根據目標容器有多少個槽位有物品來輸出紅石信號|lf- 每個槽位中的物品數量沒有影響
tile.autoverse.machine_frame.name=機器框架
tile.autoverse.muxer_priority.config_props=- 屬性1：朝向|lf- 屬性2：輸入口2方向|lf- 屬性3：延遲（tick）
tile.autoverse.muxer_priority.name=多路調制器
tile.autoverse.muxer_priority.tooltips=- 如果有物品的話，輸入口2永遠有更高的優先級|lf- 空手Shift + 右鍵可設定輸入口2
tile.autoverse.muxer_programmable.config_props=- 屬性1：朝向|lf- 屬性2：輸入口2方向|lf- 屬性3：延遲（tick）
tile.autoverse.muxer_programmable.name=可編程多路調制器
tile.autoverse.muxer_programmable.tooltips=- 激活的輸入口根據經過的物品數量進行切換|lf- 對於兩個不同輸入口，這個數量由編程所決定|lf- 空手Shift + 右鍵可設定輸入口2
tile.autoverse.muxer_redstone.config_props=- 屬性1：朝向|lf- 屬性2：輸入口2方向|lf- 屬性3：延遲（tick）
tile.autoverse.muxer_redstone.name=紅石控制多路調制器
tile.autoverse.muxer_redstone.tooltips=- 激活的輸入口可以由紅石信號改變|lf- 標記的面是輸入口2|lf- 任何其他面是輸入口1|lf- 空手Shift + 右鍵可設定輸入口2
tile.autoverse.pipe_basic.config_props=- 屬性1：延遲|lf- 屬性2：最大堆疊數|lf- 屬性3：封閉面bitmask
tile.autoverse.pipe_basic.name=管道
tile.autoverse.pipe_basic.tooltips=- 一般的物品傳輸管道|lf- 優先直線傳輸|lf- 物品不會從他過來的方向返回|lf- 空手Shift + 右鍵可關閉特定方向的連接|lf- 空主手Shift + 左鍵管道|lf- 在副手拿著一個管道的情況下Shift + 右鍵，可以重新應用目前設置的放置屬性
tile.autoverse.pipe_directional.config_props=- 屬性1：延遲|lf- 屬性2：最大堆疊數|lf- 屬性3：封閉面bitmask|lf- Prop 4: 輸出面bitmask
tile.autoverse.pipe_directional.name=方向性管道
tile.autoverse.pipe_directional.tooltips=- 物品只能從激活的輸出口離開|lf- Shift + 左鍵開關某個面的輸出|lf-也可以副手有東西，主手空手Shift + 右鍵
tile.autoverse.pipe_extraction.config_props=- 屬性1：延遲|lf- 屬性2：最大堆疊數|lf- 屬性3：封閉面bitmask|lf- Prop 4: 輸入面bitmask
tile.autoverse.pipe_extraction.name=提取管道
tile.autoverse.pipe_extraction.tooltips=- 從容器中取出物品|lf- 可以用紅石信號停止|lf- Shift + 左鍵開關是否在某方向提取物品|lf- 也可以副手有東西，主手空手Shift + 右鍵
tile.autoverse.pipe_roundrobin.config_props=- 屬性1：延遲|lf- 屬性2：最大堆疊數|lf- 屬性3：封閉面bitmask|lf- Prop 4: 輸出面bitmask
tile.autoverse.pipe_roundrobin.name=循環管道
tile.autoverse.pipe_roundrobin.tooltips=- 在激活的輸出口之間循環輸出物品|lf- 註意循環指的是“輸出嘗試”，和輸出數量無關|lf- 如果一個輸出未成功，則會切換到下一個輸出口|lf- 所以如果在這個過程中有一個輸出口堵塞了，那麽分配到各個輸出口的物品數量將是不等的|lf- 如果物品推進所有的循環面的時候都失敗了，那麽它會被推入其他連接的面中|lf- 這樣本管道就可以被用作一個輸入管道，因為它總是會嘗試先向循環面輸出|lf 但是其他連界面也能使用|lf- Shift + 左鍵可以切換某一個方向的連接|lf- 也可以副手有東西，主手空手Shift + 右鍵
tile.autoverse.placer.config_props=- 屬性1：朝向|lf- 屬性2：水平朝向|lf- 屬性3：延遲（tick）
tile.autoverse.placer.name=方塊放置器
tile.autoverse.placer.tooltips=- 一個基礎的方塊放置器，適合與方塊狀態讀取器並用
tile.autoverse.placer_programmable.config_props=- 屬性1：朝向|lf- 屬性2：水平朝向|lf- 屬性3：放置偏移量(0-15)
tile.autoverse.placer_programmable.name=可編程方塊放置器
tile.autoverse.placer_programmable.tooltips=- 能以特定的狀態放置方塊以及，以及給TileEntity應用屬性|lf （目前只能應用於本mod的TileEntity）|lf- 對於本mod以外的方塊：|lf  - 第一個參數是任何PropertyDirection（朝向）類的屬性|lf  - 第二個參數是PropertyInteger類的屬性|lf  - 屬性按字母順序排列|lf- 基本上用這個設備可以按特定的方向/設置放置方塊（如台階）|lf- 最多可以隔著15個方塊放置
tile.autoverse.redstone_emitter_advanced.config_props=- 屬性1：朝向
tile.autoverse.redstone_emitter_advanced.name=可編程紅石信號發生器（高級）
tile.autoverse.redstone_emitter_advanced.tooltips=- 可以用序列控制的紅石信號發射器，每個面都可以獨立設定
tile.autoverse.redstone_emitter_basic.config_props=- 屬性1：朝向
tile.autoverse.redstone_emitter_basic.name=可編程紅石信號發生器（基礎）
tile.autoverse.redstone_emitter_basic.tooltips=- 可設定輸出面|lf- 以進入的物品序列開/關
tile.autoverse.sensor_height.name=高度傳感器
tile.autoverse.sensor_height.tooltips=- 根據自身的海拔發出紅石信號|lf- 因為強度只能是0-15，高度每增加16紅石信號強度增加1
tile.autoverse.sequence_detector.config_props=- 屬性1：朝向
tile.autoverse.sequence_detector.name=序列檢測器
tile.autoverse.sequence_detector.tooltips=- 當檢測到一個預設好的物品序列時，輸出一個1 Tick的紅石脈沖
tile.autoverse.sequencer_basic.config_props=- 屬性1：朝向|lf- 屬性2：物品欄大小
tile.autoverse.sequencer_basic.name=定序器（基礎）
tile.autoverse.sequencer_basic.tooltips=- 槽位數量可調整（最多18個）|lf- 每次從當前的輸出槽位中輸出一個物品，並前進一個槽位|lf- 物品可以用管道取出，也可以通過紅石脈沖輸出
tile.autoverse.sequencer_programmable.config_props=- 屬性1：朝向
tile.autoverse.sequencer_programmable.name=可編程定序器
tile.autoverse.sequencer_programmable.tooltips=- 創建一個和基礎版本類似的可設置的序列物品緩存器|lf  物品類型可以被鎖定，並且空槽不會被跳過|lf- 序列中的物品必須用管道取出|lf- 不在序列內的物品會被推出
tile.autoverse.splitter_length.config_props=- 屬性1：朝向|lf- 屬性2：第二輸出口方向|lf- 屬性3：延遲（tick）
tile.autoverse.splitter_length.name=序列長度分離器
tile.autoverse.splitter_length.tooltips=- 激活的物品輸出口根據經過的物品數量自動切換|lf- 對於兩個面，這個數量都是可以編程的|lf- 空手Shift + 右鍵可設定輸入口2
tile.autoverse.splitter_redstone.config_props=- 屬性1：朝向|lf- 屬性2：第二輸出口方向|lf- 屬性3：延遲（tick）
tile.autoverse.splitter_redstone.name=紅石控制虛序列分離器
tile.autoverse.splitter_redstone.tooltips=- 物品輸出口可以通過紅石信號切換|lf- 空手Shift + 右鍵可設定輸入口2
tile.autoverse.splitter_switchable.config_props=- 屬性1：朝向|lf- 屬性2：第二輸出口方向|lf- 屬性3：延遲（tick）
tile.autoverse.splitter_switchable.name=可切換序列分離器
tile.autoverse.splitter_switchable.tooltips=- 物品輸出口可以根據一個預設的序列切換|lf- 空手Shift + 右鍵可設定輸入口2
tile.autoverse.trash_bin.name=垃圾桶
tile.autoverse.trash_bin.tooltips=- 只是一個普通的垃圾桶，銷毀輸入的物品
tile.autoverse.trash_buffer.name=垃圾緩存器
tile.autoverse.trash_buffer.tooltips=- 有一個更大緩存的垃圾桶（36槽。最大每個槽位1024個物品）|lf- 你可以把它看作一個有虛空升級的存儲方塊
